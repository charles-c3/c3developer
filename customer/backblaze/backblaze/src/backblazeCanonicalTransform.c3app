module backblazeCanonicalTransform remix canonicalTransform {

  import backblazeCanonical;

  /* Canonical backblazeCanonical to Asset Transformation */
  @canonicalTransform (condition="exists(date)")
  type TransformBackBlazeCanonicalToAsset mixes FixedAsset transforms CanonicalBackblaze {
    id                : ~ expression "serial_number"
    name              : ~ expression "serial_number"
    model             : ~ expression "model"
  }

  @canonicalTransform (condition="exists(date)")
  type TransformBackBlazeCanonicalToPhysicalMeasurementSeries mixes BackBlazeMeasurementSeries transforms CanonicalBackblaze {
    id                : ~ expression "serial_number"
    asset             : ~ expression {id: "serial_number"}
    treatment         : ~ expression "rate"
    meta              : ~ expression {sourceSystem: "'BackBlaze'"}
    
  }

  @canonicalTransform (condition="exists(date)")
  type TransformBackBlazeCanonicalToMeasurement mixes BackBlazeMeasurement transforms CanonicalBackblaze {
    start                     : ~ expression "dateTime(date,'yyyy-mm-dd')"
    end                       : ~ expression "dateTime(date,'yyyy-mm-dd') + period(1,'DAY')"
    parent                    : ~ expression {id: "serial_number"}
    capacity                  : ~ expression "capacity_bytes"
    failure: ~ expression "failure"
    spinRetryNormalized: ~ expression "smart_10_normalized"
    spinRetry: ~ expression "smart_10_raw"
    calibrationRetryNormalized: ~ expression "smart_11_normalized"
    calibrationRetry: ~ expression "smart_11_raw"
    powerCycleNormalized: ~ expression "smart_12_normalized"
    powerCycle: ~ expression "smart_12_raw"
    softReadNormalized: ~ expression "smart_13_normalized"
    softRead: ~ expression "smart_13_raw"
    smart15Normalized: ~ expression "smart_15_normalized"
    smart15: ~ expression "smart_15_raw"
    runtimeBadBlockNormalized: ~ expression "smart_183_normalized"
    runtimeBadBlock: ~ expression "smart_183_raw"
    endToEndErrorNormalized: ~ expression "smart_184_normalized"
    endToEndError: ~ expression "smart_184_raw"
    uncorrectableErrorsNormalized: ~ expression "smart_187_normalized"
    uncorrectableErrors: ~ expression "smart_187_raw"
    commandTimeoutNormalized: ~ expression "smart_188_normalized"
    commandTimeout: ~ expression "smart_188_raw"
    highFlyWritesNormalized: ~ expression "smart_189_normalized"
    highFlyWrites: ~ expression "smart_189_raw"
    airflowTempNormalized: ~ expression "smart_190_normalized"
    airflowTemp: ~ expression "smart_190_raw"
    gSenseErrorNormalized: ~ expression "smart_191_normalized"
    gSenseError: ~ expression "smart_191_raw"
    powerOffCountNormalized: ~ expression "smart_192_normalized"
    powerOffCount: ~ expression "smart_192_raw"
    loadCycleCountNormalized: ~ expression "smart_193_normalized"
    loadCycleCount: ~ expression "smart_193_raw"
    temperatureNormalized: ~ expression "smart_194_normalized"
    temperature: ~ expression "smart_194_raw"
    eccRecoveredNormalized: ~ expression "smart_195_normalized"
    eccRecovered: ~ expression "smart_195_raw"
    reallocationEventCountNormalized: ~ expression "smart_196_normalized"
    reallocationEventCount: ~ expression "smart_196_raw"
    currentPendingSectorNormalized: ~ expression "smart_197_normalized"
    currentPendingSector: ~ expression "smart_197_raw"
    uncorrectableSectorCountNormalized: ~ expression "smart_198_normalized"
    uncorrectableSectorCount: ~ expression "smart_198_raw"
    dmaCrcErrorNormalized: ~ expression "smart_199_normalized"
    dmaCrcError: ~ expression "smart_199_raw"
    readErrorRateNormalized: ~ expression "smart_1_normalized"
    readErrorRate: ~ expression "smart_1_raw"
    multiZoneErrorNormalized: ~ expression "smart_200_normalized"
    multiZoneError: ~ expression "smart_200_raw"
    softErrorNormalized: ~ expression "smart_201_normalized"
    softError: ~ expression "smart_201_raw"
    diskShiftNormalized: ~ expression "smart_220_normalized"
    diskShift: ~ expression "smart_220_raw"
    loadedHoursNormalized: ~ expression "smart_222_normalized"
    loadedHours: ~ expression "smart_222_raw"
    loadUnloadRetryNormalized: ~ expression "smart_223_normalized"
    loadUnloadRetry: ~ expression "smart_223_raw"
    loadFrictionNormalized: ~ expression "smart_224_normalized"
    loadFriction: ~ expression "smart_224_raw"
    loadUnloadCycleNormalized: ~ expression "smart_225_normalized"
    loadUnloadCycle: ~ expression "smart_225_raw"
    loadInTimeNormalized: ~ expression "smart_226_normalized"
    loadInTime: ~ expression "smart_226_raw"
    heliumLevelNormalized: ~ expression "smart_22_normalized"
    heliumLevel: ~ expression "smart_22_raw"
    transferErrorRateNormalized: ~ expression "smart_240_normalized"
    transferErrorRate: ~ expression "smart_240_raw"
    totalLBAWrittenNormalized: ~ expression "smart_241_normalized"
    totalLBAWritten: ~ expression "smart_241_raw"
    totalLBAReadNormalized: ~ expression "smart_242_normalized"
    totalLBARead: ~ expression "smart_242_raw"
    readErrorRetryNormalized: ~ expression "smart_250_normalized"
    readErrorRetry: ~ expression "smart_250_raw"
    minimumSparesRemainingNormalized: ~ expression "smart_251_normalized"
    minimumSparesRemaining: ~ expression "smart_251_raw"
    newlyAddedBadFlashNormalized: ~ expression "smart_252_normalized"
    newlyAddedBadFlash: ~ expression "smart_252_raw"
    freeFallProtectionNormalized: ~ expression "smart_254_normalized"
    freeFallProtection: ~ expression "smart_254_raw"
    smart255Normalized: ~ expression "smart_255_normalized"
    smart255: ~ expression "smart_255_raw"
    throughputNormalized: ~ expression "smart_2_normalized"
    throughput: ~ expression "smart_2_raw"
    spinUpNormalized: ~ expression "smart_3_normalized"
    spinUp: ~ expression "smart_3_raw"
    startStopCountNormalized: ~ expression "smart_4_normalized"
    startStopCount: ~ expression "smart_4_raw"
    reallocatedSectorsNormalized: ~ expression "smart_5_normalized"
    reallocatedSectors: ~ expression "smart_5_raw"
    seekErrorNormalized: ~ expression "smart_7_normalized"
    seekError: ~ expression "smart_7_raw"
    seekTimeNormalized: ~ expression "smart_8_normalized"
    seekTime: ~ expression "smart_8_raw"
    powerOnNormalized: ~ expression "smart_9_normalized"
    powerOn: ~ expression "smart_9_raw"

  }

}