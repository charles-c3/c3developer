/*
 * Copyright 2009-2016 C3 IoT (http://www.c3iot.com).  All Rights Reserved.
 * This material, including without limitation any software, is the confidential trade secret
 * and proprietary information of C3 IoT and its licensors.  Reproduction, use and distribution
 * of this material in any form is strictly prohibited except as set forth in a written
 * license agreement with C3 IoT and/or its authorized distributors.
 */
app module failureAlerts {
   import analyticsContainer
   import analytic
   import structure
   import units

   // failure detection
   @DFE(period="DAY", grain="DAY", metric="failure")
   type AssetFailure mixes TSDataFlowEvent<FixedAsset>

   @DFE(period="DAY", grain="DAY")
   type AssetFailureInput mixes CompoundDataFlowEvent<FixedAsset> {
     fail: AssetFailure
   }

   type AssetFailureAlert mixes Analytic<AssetFailureInput, Void> {
      process  : ~ {@AssetFailureAlert@} js server
   }


   // failure classifier
   @DFE(period="Day", interval="Day", metric="powerOn")
   type PowerOn mixes TSDataFlowEvent<FixedAsset>

   @DFE(period="Day", interval="Day", metric="seekError")
   type SeekError mixes TSDataFlowEvent<FixedAsset>

   @DFE(period="Day", interval="Day", metric="seekErrorNormalized")
   type SeekErrorNormalized mixes TSDataFlowEvent<FixedAsset>

   @DFE(period="Day", interval="Day", threshold=1)
   type PredictAssetFailureInput mixes CompoundDataFlowEvent<FixedAsset> {
     powerOn: PowerOn
     seekError: SeekError
     seekErrorNormalized: SeekErrorNormalized
   }

   type PredictAssetFailure mixes Analytic<PredictAssetFailureInput, Void> {
      processSource  : ~ {@PredictAssetFailure@} js server

      loadContextAll : final ~ {@PredictAssetFailure@} js server

   }
}